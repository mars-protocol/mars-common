{
  "contract_name": "mars-params",
  "contract_version": "1.0.1",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "max_close_factor",
      "owner"
    ],
    "properties": {
      "max_close_factor": {
        "description": "The maximum percent a liquidator can decrease the debt amount of the liquidatee",
        "allOf": [
          {
            "$ref": "#/definitions/Decimal"
          }
        ]
      },
      "owner": {
        "description": "Contract's owner",
        "type": "string"
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "update_owner"
        ],
        "properties": {
          "update_owner": {
            "$ref": "#/definitions/OwnerUpdate"
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "update_max_close_factor"
        ],
        "properties": {
          "update_max_close_factor": {
            "$ref": "#/definitions/Decimal"
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "update_asset_params"
        ],
        "properties": {
          "update_asset_params": {
            "$ref": "#/definitions/AssetParamsUpdate"
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "update_vault_config"
        ],
        "properties": {
          "update_vault_config": {
            "$ref": "#/definitions/VaultConfigUpdate"
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "emergency_update"
        ],
        "properties": {
          "emergency_update": {
            "$ref": "#/definitions/EmergencyUpdate"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "AssetParams": {
        "type": "object",
        "required": [
          "liquidation_bonus",
          "liquidation_threshold",
          "max_loan_to_value",
          "permissions"
        ],
        "properties": {
          "liquidation_bonus": {
            "$ref": "#/definitions/Decimal"
          },
          "liquidation_threshold": {
            "$ref": "#/definitions/Decimal"
          },
          "max_loan_to_value": {
            "$ref": "#/definitions/Decimal"
          },
          "permissions": {
            "$ref": "#/definitions/AssetPermissions"
          }
        },
        "additionalProperties": false
      },
      "AssetParamsUpdate": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "add_or_update"
            ],
            "properties": {
              "add_or_update": {
                "type": "object",
                "required": [
                  "denom",
                  "params"
                ],
                "properties": {
                  "denom": {
                    "type": "string"
                  },
                  "params": {
                    "$ref": "#/definitions/AssetParams"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "AssetPermissions": {
        "type": "object",
        "required": [
          "red_bank",
          "rover"
        ],
        "properties": {
          "red_bank": {
            "$ref": "#/definitions/RedBankSettings"
          },
          "rover": {
            "$ref": "#/definitions/RoverPermissions"
          }
        },
        "additionalProperties": false
      },
      "Coin": {
        "type": "object",
        "required": [
          "amount",
          "denom"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "EmergencyUpdate": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "rover"
            ],
            "properties": {
              "rover": {
                "$ref": "#/definitions/RoverEmergencyUpdate"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "red_bank"
            ],
            "properties": {
              "red_bank": {
                "$ref": "#/definitions/RedBankEmergencyUpdate"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "OwnerUpdate": {
        "oneOf": [
          {
            "description": "Proposes a new owner to take role. Only current owner can execute.",
            "type": "object",
            "required": [
              "propose_new_owner"
            ],
            "properties": {
              "propose_new_owner": {
                "type": "object",
                "required": [
                  "proposed"
                ],
                "properties": {
                  "proposed": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Clears the currently proposed owner. Only current owner can execute.",
            "type": "string",
            "enum": [
              "clear_proposed"
            ]
          },
          {
            "description": "Promotes the proposed owner to be the current one. Only the proposed owner can execute.",
            "type": "string",
            "enum": [
              "accept_proposed"
            ]
          },
          {
            "description": "Throws away the keys to the Owner role forever. Once done, no owner can ever be set later.",
            "type": "string",
            "enum": [
              "abolish_owner_role"
            ]
          },
          {
            "description": "A separate entity managed by Owner that can be used for granting specific emergency powers.",
            "type": "object",
            "required": [
              "set_emergency_owner"
            ],
            "properties": {
              "set_emergency_owner": {
                "type": "object",
                "required": [
                  "emergency_owner"
                ],
                "properties": {
                  "emergency_owner": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Remove the entity in the Emergency Owner role",
            "type": "string",
            "enum": [
              "clear_emergency_owner"
            ]
          }
        ]
      },
      "RedBankEmergencyUpdate": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "disable_borrowing"
            ],
            "properties": {
              "disable_borrowing": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RedBankSettings": {
        "type": "object",
        "required": [
          "borrow_enabled",
          "deposit_cap",
          "deposit_enabled"
        ],
        "properties": {
          "borrow_enabled": {
            "type": "boolean"
          },
          "deposit_cap": {
            "$ref": "#/definitions/Uint128"
          },
          "deposit_enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RoverEmergencyUpdate": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "set_zero_max_ltv_on_vault"
            ],
            "properties": {
              "set_zero_max_ltv_on_vault": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "set_zero_deposit_cap_on_vault"
            ],
            "properties": {
              "set_zero_deposit_cap_on_vault": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "disallow_coin"
            ],
            "properties": {
              "disallow_coin": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RoverPermissions": {
        "type": "object",
        "required": [
          "whitelisted"
        ],
        "properties": {
          "whitelisted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      },
      "VaultConfig": {
        "type": "object",
        "required": [
          "deposit_cap",
          "liquidation_threshold",
          "max_loan_to_value",
          "whitelisted"
        ],
        "properties": {
          "deposit_cap": {
            "$ref": "#/definitions/Coin"
          },
          "liquidation_threshold": {
            "$ref": "#/definitions/Decimal"
          },
          "max_loan_to_value": {
            "$ref": "#/definitions/Decimal"
          },
          "whitelisted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VaultConfigUpdate": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "add_or_update"
            ],
            "properties": {
              "add_or_update": {
                "type": "object",
                "required": [
                  "addr",
                  "config"
                ],
                "properties": {
                  "addr": {
                    "type": "string"
                  },
                  "config": {
                    "$ref": "#/definitions/VaultConfig"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "remove"
            ],
            "properties": {
              "remove": {
                "type": "object",
                "required": [
                  "addr"
                ],
                "properties": {
                  "addr": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "owner"
        ],
        "properties": {
          "owner": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "asset_params"
        ],
        "properties": {
          "asset_params": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "all_asset_params"
        ],
        "properties": {
          "all_asset_params": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "vault_config"
        ],
        "properties": {
          "vault_config": {
            "type": "object",
            "required": [
              "address"
            ],
            "properties": {
              "address": {
                "description": "Address of vault",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "all_vault_configs"
        ],
        "properties": {
          "all_vault_configs": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "max_close_factor"
        ],
        "properties": {
          "max_close_factor": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "all_asset_params": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_AssetParamsResponse",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssetParamsResponse"
      },
      "definitions": {
        "AssetParams": {
          "type": "object",
          "required": [
            "liquidation_bonus",
            "liquidation_threshold",
            "max_loan_to_value",
            "permissions"
          ],
          "properties": {
            "liquidation_bonus": {
              "$ref": "#/definitions/Decimal"
            },
            "liquidation_threshold": {
              "$ref": "#/definitions/Decimal"
            },
            "max_loan_to_value": {
              "$ref": "#/definitions/Decimal"
            },
            "permissions": {
              "$ref": "#/definitions/AssetPermissions"
            }
          },
          "additionalProperties": false
        },
        "AssetParamsResponse": {
          "type": "object",
          "required": [
            "denom",
            "params"
          ],
          "properties": {
            "denom": {
              "type": "string"
            },
            "params": {
              "$ref": "#/definitions/AssetParams"
            }
          },
          "additionalProperties": false
        },
        "AssetPermissions": {
          "type": "object",
          "required": [
            "red_bank",
            "rover"
          ],
          "properties": {
            "red_bank": {
              "$ref": "#/definitions/RedBankSettings"
            },
            "rover": {
              "$ref": "#/definitions/RoverPermissions"
            }
          },
          "additionalProperties": false
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "RedBankSettings": {
          "type": "object",
          "required": [
            "borrow_enabled",
            "deposit_cap",
            "deposit_enabled"
          ],
          "properties": {
            "borrow_enabled": {
              "type": "boolean"
            },
            "deposit_cap": {
              "$ref": "#/definitions/Uint128"
            },
            "deposit_enabled": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "RoverPermissions": {
          "type": "object",
          "required": [
            "whitelisted"
          ],
          "properties": {
            "whitelisted": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "all_vault_configs": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_VaultConfig",
      "type": "array",
      "items": {
        "$ref": "#/definitions/VaultConfig"
      },
      "definitions": {
        "Coin": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        },
        "VaultConfig": {
          "type": "object",
          "required": [
            "deposit_cap",
            "liquidation_threshold",
            "max_loan_to_value",
            "whitelisted"
          ],
          "properties": {
            "deposit_cap": {
              "$ref": "#/definitions/Coin"
            },
            "liquidation_threshold": {
              "$ref": "#/definitions/Decimal"
            },
            "max_loan_to_value": {
              "$ref": "#/definitions/Decimal"
            },
            "whitelisted": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      }
    },
    "asset_params": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AssetParams",
      "type": "object",
      "required": [
        "liquidation_bonus",
        "liquidation_threshold",
        "max_loan_to_value",
        "permissions"
      ],
      "properties": {
        "liquidation_bonus": {
          "$ref": "#/definitions/Decimal"
        },
        "liquidation_threshold": {
          "$ref": "#/definitions/Decimal"
        },
        "max_loan_to_value": {
          "$ref": "#/definitions/Decimal"
        },
        "permissions": {
          "$ref": "#/definitions/AssetPermissions"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AssetPermissions": {
          "type": "object",
          "required": [
            "red_bank",
            "rover"
          ],
          "properties": {
            "red_bank": {
              "$ref": "#/definitions/RedBankSettings"
            },
            "rover": {
              "$ref": "#/definitions/RoverPermissions"
            }
          },
          "additionalProperties": false
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "RedBankSettings": {
          "type": "object",
          "required": [
            "borrow_enabled",
            "deposit_cap",
            "deposit_enabled"
          ],
          "properties": {
            "borrow_enabled": {
              "type": "boolean"
            },
            "deposit_cap": {
              "$ref": "#/definitions/Uint128"
            },
            "deposit_enabled": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "RoverPermissions": {
          "type": "object",
          "required": [
            "whitelisted"
          ],
          "properties": {
            "whitelisted": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "max_close_factor": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Decimal",
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "owner": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OwnerResponse",
      "description": "Returned from Owner.query()",
      "type": "object",
      "required": [
        "abolished",
        "initialized"
      ],
      "properties": {
        "abolished": {
          "type": "boolean"
        },
        "emergency_owner": {
          "type": [
            "string",
            "null"
          ]
        },
        "initialized": {
          "type": "boolean"
        },
        "owner": {
          "type": [
            "string",
            "null"
          ]
        },
        "proposed": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "vault_config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VaultConfig",
      "type": "object",
      "required": [
        "deposit_cap",
        "liquidation_threshold",
        "max_loan_to_value",
        "whitelisted"
      ],
      "properties": {
        "deposit_cap": {
          "$ref": "#/definitions/Coin"
        },
        "liquidation_threshold": {
          "$ref": "#/definitions/Decimal"
        },
        "max_loan_to_value": {
          "$ref": "#/definitions/Decimal"
        },
        "whitelisted": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Coin": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    }
  }
}
